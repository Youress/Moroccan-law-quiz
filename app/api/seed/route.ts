import { prisma } from "@/lib/prisma"
import { NextResponse } from "next/server"
import { Category, Difficulty } from "@prisma/client"

export async function POST() {
  try {
    console.log("๐ฑ Seeding database...")

    // Check if questions already exist
    const existingQuestions = await prisma.question.count()
    if (existingQuestions > 0) {
      return NextResponse.json({
        message: "Database already seeded",
        questionsCount: existingQuestions,
      })
    }

    // Enhanced sample questions with categories, difficulties, and explanations
    const sampleQuestions = [
      {
        text: "ูุง ูู ุงููุจุฏุฃ ุงูุฃุณุงุณู ูู ุงููุงููู ุงูุฌูุงุฆู ุงููุบุฑุจู ูููุง ูุชุนูู ุจูุฑููุฉ ุงูุจุฑุงุกุฉุ",
        explanation:
          "ูุฑููุฉ ุงูุจุฑุงุกุฉ ูุจุฏุฃ ุฃุณุงุณู ูู ุงููุงููู ุงูุฌูุงุฆู ุงููุบุฑุจูุ ุญูุซ ูุนุชุจุฑ ุงููุชูู ุจุฑูุฆุงู ุญุชู ุชุซุจุช ุฅุฏุงูุชู ุจุญูู ูุถุงุฆู ููุงุฆู. ูุฐุง ุงููุจุฏุฃ ููุตูุต ุนููู ูู ุงูุฏุณุชูุฑ ุงููุบุฑุจู ูุงููุงููู ุงูุฌูุงุฆู.",
        category: Category.CRIMINAL,
        difficulty: Difficulty.EASY,
        examTag: "Exam2025",
        answers: [
          { text: "ุงููุชูู ุจุฑูุก ุญุชู ุชุซุจุช ุฅุฏุงูุชู", isCorrect: true },
          { text: "ุงููุชูู ูุฐูุจ ุญุชู ูุซุจุช ุจุฑุงุกุชู", isCorrect: false },
          { text: "ูุง ุชูุฌุฏ ูุฑููุฉ ูู ุงููุงููู ุงููุบุฑุจู", isCorrect: false },
          { text: "ุงููุงุถู ููุฑุฑ ุงููุฑููุฉ", isCorrect: false },
        ],
      },
      {
        text: "ูุง ูู ูุฏุฉ ุงูุชูุงุฏู ูู ุงูุฌุฑุงุฆู ุงูุฌูุงุฆูุฉ ุญุณุจ ุงููุงููู ุงูุฌูุงุฆู ุงููุบุฑุจูุ",
        explanation:
          "ุญุณุจ ุงููุตู 5 ูู ูุงููู ุงููุณุทุฑุฉ ุงูุฌูุงุฆูุฉ ุงููุบุฑุจูุ ุชุชูุงุฏู ุงูุฏุนูู ุงูุนููููุฉ ูู ุงูุฌูุงูุงุช ุจูุฑูุฑ 15 ุณูุฉ ูู ููู ุงุฑุชูุงุจ ุงูุฌุฑููุฉ.",
        category: Category.CRIMINAL,
        difficulty: Difficulty.MEDIUM,
        examTag: "Exam2025",
        answers: [
          { text: "5 ุณููุงุช", isCorrect: false },
          { text: "10 ุณููุงุช", isCorrect: false },
          { text: "15 ุณูุฉ", isCorrect: true },
          { text: "20 ุณูุฉ", isCorrect: false },
        ],
      },
      {
        text: "ูู ุงููุงููู ุงูุชุฌุงุฑู ุงููุบุฑุจูุ ูุง ูู ุงูุญุฏ ุงูุฃุฏูู ูุฑุฃุณ ูุงู ุงูุดุฑูุฉ ุงููุณุงููุฉุ",
        explanation:
          "ุญุณุจ ูุงููู ุงูุดุฑูุงุช ุงููุบุฑุจู ุฑูู 17.95ุ ุงูุญุฏ ุงูุฃุฏูู ูุฑุฃุณ ูุงู ุงูุดุฑูุฉ ุงููุณุงููุฉ ูู 300,000 ุฏุฑูู ุฅุฐุง ูู ุชุฏุน ุงูุฌูููุฑ ููุงูุชุชุงุจุ ู3,000,000 ุฏุฑูู ุฅุฐุง ุฏุนุช ุงูุฌูููุฑ ููุงูุชุชุงุจ.",
        category: Category.COMMERCIAL,
        difficulty: Difficulty.MEDIUM,
        examTag: "Exam2025",
        answers: [
          { text: "100,000 ุฏุฑูู", isCorrect: false },
          { text: "300,000 ุฏุฑูู", isCorrect: true },
          { text: "500,000 ุฏุฑูู", isCorrect: false },
          { text: "1,000,000 ุฏุฑูู", isCorrect: false },
        ],
      },
      {
        text: "ุญุณุจ ูุฏููุฉ ุงูุฃุณุฑุฉ ุงููุบุฑุจูุฉุ ูุง ูู ุงูุณู ุงููุงูููู ููุฒูุงุฌุ",
        explanation:
          "ุญุณุจ ุงููุงุฏุฉ 19 ูู ูุฏููุฉ ุงูุฃุณุฑุฉ ุงููุบุฑุจูุฉุ ุฃูููุฉ ุงูุฒูุงุฌ ุชูุชูู ุจุฅุชูุงู ุงููุชู ูุงููุชุงุฉ ุงููุชูุชุนูู ุจููุงููุง ุงูุนูููุฉ ุซูุงูู ุนุดุฑุฉ ุณูุฉ ุดูุณูุฉ.",
        category: Category.FAMILY,
        difficulty: Difficulty.EASY,
        examTag: "Exam2025",
        answers: [
          { text: "16 ุณูุฉ ููุฐูุฑ ูุงูุฃูุซู", isCorrect: false },
          { text: "18 ุณูุฉ ููุฐูุฑ ู16 ุณูุฉ ููุฃูุซู", isCorrect: false },
          { text: "18 ุณูุฉ ููุฐูุฑ ูุงูุฃูุซู", isCorrect: true },
          { text: "21 ุณูุฉ ููุฐูุฑ ู18 ุณูุฉ ููุฃูุซู", isCorrect: false },
        ],
      },
      {
        text: "ูู ุงููุงููู ุงูุฅุฏุงุฑู ุงููุบุฑุจูุ ูุง ูู ุงููุฏุฉ ุงููุงููููุฉ ููุทุนู ูู ุงููุฑุงุฑุงุช ุงูุฅุฏุงุฑูุฉุ",
        explanation:
          "ุญุณุจ ูุงููู ุงููุญุงูู ุงูุฅุฏุงุฑูุฉุ ูุฏุฉ ุงูุทุนู ูู ุงููุฑุงุฑุงุช ุงูุฅุฏุงุฑูุฉ ูู 60 ูููุงู ูู ุชุงุฑูุฎ ุงูุชุจููุบ ุฃู ุงููุดุฑุ ููุฐู ุงููุฏุฉ ูู ุงููุธุงู ุงูุนุงู.",
        category: Category.ADMINISTRATIVE,
        difficulty: Difficulty.MEDIUM,
        examTag: "Exam2025",
        answers: [
          { text: "30 ูููุงู", isCorrect: false },
          { text: "60 ูููุงู", isCorrect: true },
          { text: "90 ูููุงู", isCorrect: false },
          { text: "120 ูููุงู", isCorrect: false },
        ],
      },
      {
        text: "ูุง ูู ุงูุดุฑูุท ุงูุฃุณุงุณูุฉ ูุตุญุฉ ุงูุนูุฏ ูู ุงููุงููู ุงููุฏูู ุงููุบุฑุจูุ",
        explanation:
          "ุญุณุจ ูุงููู ุงูุงูุชุฒุงูุงุช ูุงูุนููุฏ ุงููุบุฑุจูุ ุงูุดุฑูุท ุงูุฃุณุงุณูุฉ ูุตุญุฉ ุงูุนูุฏ ูู: ุงูุฑุถุง (ุงูุชุฑุงุถู)ุ ูุงููุญู (ููุถูุน ุงูุนูุฏ)ุ ูุงูุณุจุจ (ุงูุบุฑุถ ุงููุดุฑูุน ูู ุงูุนูุฏ).",
        category: Category.CIVIL,
        difficulty: Difficulty.EASY,
        examTag: "Exam2025",
        answers: [
          { text: "ุงูุฑุถุง ูุงููุญู ูุงูุณุจุจ", isCorrect: true },
          { text: "ุงููุชุงุจุฉ ูุงูุดููุฏ", isCorrect: false },
          { text: "ุงูุชูููุน ููุท", isCorrect: false },
          { text: "ุงูููุงููุฉ ุงูุดูููุฉ", isCorrect: false },
        ],
      },
      {
        text: "ูู ูุงููู ุงูุดุบู ุงููุบุฑุจูุ ูุง ูู ูุฏุฉ ูุชุฑุฉ ุงูุชุฌุฑุจุฉ ุงููุตูู ููุฅุทุงุฑุงุชุ",
        explanation:
          "ุญุณุจ ุงููุงุฏุฉ 13 ูู ูุฏููุฉ ุงูุดุบู ุงููุบุฑุจูุฉุ ูุฏุฉ ูุชุฑุฉ ุงูุชุฌุฑุจุฉ ููุฅุทุงุฑุงุช ูุงููุณุชุฎุฏููู ุงูููุงุซููู ูุง ูููู ุฃู ุชุชุฌุงูุฒ ุซูุงุซุฉ ุฃุดูุฑ.",
        category: Category.LABOR,
        difficulty: Difficulty.MEDIUM,
        examTag: "Exam2025",
        answers: [
          { text: "ุดูุฑ ูุงุญุฏ", isCorrect: false },
          { text: "ุดูุฑูู", isCorrect: false },
          { text: "ุซูุงุซุฉ ุฃุดูุฑ", isCorrect: true },
          { text: "ุณุชุฉ ุฃุดูุฑ", isCorrect: false },
        ],
      },
      {
        text: "ุญุณุจ ุงููุงููู ุงูุฌูุงุฆู ุงููุบุฑุจูุ ูุง ูู ุนููุจุฉ ุฌุฑููุฉ ุงูุณุฑูุฉ ุงูุจุณูุทุฉุ",
        explanation:
          "ุญุณุจ ุงููุตู 505 ูู ุงููุงููู ุงูุฌูุงุฆู ุงููุบุฑุจูุ ุนููุจุฉ ุงูุณุฑูุฉ ุงูุจุณูุทุฉ ูู ุงูุญุจุณ ูู ุดูุฑ ูุงุญุฏ ุฅูู ุณูุฉ ูุบุฑุงูุฉ ูู 200 ุฅูู 500 ุฏุฑูู.",
        category: Category.CRIMINAL,
        difficulty: Difficulty.MEDIUM,
        examTag: "Exam2025",
        answers: [
          { text: "ุงูุญุจุณ ูู ุดูุฑ ุฅูู ุณูุฉ", isCorrect: true },
          { text: "ุงูุญุจุณ ูู ุณูุฉ ุฅูู ุฎูุณ ุณููุงุช", isCorrect: false },
          { text: "ุบุฑุงูุฉ ูุงููุฉ ููุท", isCorrect: false },
          { text: "ุงูุฃุดุบุงู ุงูุดุงูุฉ", isCorrect: false },
        ],
      },
      {
        text: "ูู ุงููุงููู ุงูุชุฌุงุฑู ุงููุบุฑุจูุ ูุชู ูุนุชุจุฑ ุงูุชุงุฌุฑ ูู ุญุงูุฉ ุชููู ุนู ุงูุฏูุนุ",
        explanation:
          "ุญุณุจ ูุงููู ุตุนูุจุงุช ุงูููุงููุฉุ ูุนุชุจุฑ ุงูุชุงุฌุฑ ูู ุญุงูุฉ ุชููู ุนู ุงูุฏูุน ุนูุฏูุง ูููู ุบูุฑ ูุงุฏุฑ ุนูู ุฃุฏุงุก ุฏูููู ุงููุณุชุญูุฉ ุงูุฃุฏุงุก ูู ุฃุตููู ุงููุชุงุญุฉ.",
        category: Category.COMMERCIAL,
        difficulty: Difficulty.HARD,
        examTag: "Exam2025",
        answers: [
          { text: "ุนูุฏ ุนุฏู ูุฏุฑุชู ุนูู ุฏูุน ุฏูููู ุงููุณุชุญูุฉ", isCorrect: true },
          { text: "ุนูุฏ ุฅุบูุงู ุงููุญู ุงูุชุฌุงุฑู", isCorrect: false },
          { text: "ุนูุฏ ุชุบููุฑ ุงููุดุงุท ุงูุชุฌุงุฑู", isCorrect: false },
          { text: "ุนูุฏ ุงูุชูุงุก ุฑุฎุตุฉ ุงูุชุฌุงุฑุฉ", isCorrect: false },
        ],
      },
      {
        text: "ูุง ูู ุงูุญุฏ ุงูุฃูุตู ูุณุงุนุงุช ุงูุนูู ุงูุฃุณุจูุนูุฉ ูู ูุงููู ุงูุดุบู ุงููุบุฑุจูุ",
        explanation:
          "ุญุณุจ ุงููุงุฏุฉ 184 ูู ูุฏููุฉ ุงูุดุบูุ ูุฏุฉ ุงูุดุบู ุงูุนุงุฏูุฉ ููุฃุฌุฑุงุก ูู ุงูุฃูุดุทุฉ ุบูุฑ ุงูููุงุญูุฉ ูู 2288 ุณุงุนุฉ ูู ุงูุณูุฉ ุฃู 44 ุณุงุนุฉ ูู ุงูุฃุณุจูุน.",
        category: Category.LABOR,
        difficulty: Difficulty.EASY,
        examTag: "Exam2025",
        answers: [
          { text: "40 ุณุงุนุฉ", isCorrect: false },
          { text: "44 ุณุงุนุฉ", isCorrect: true },
          { text: "48 ุณุงุนุฉ", isCorrect: false },
          { text: "50 ุณุงุนุฉ", isCorrect: false },
        ],
      },
    ]

    // Create achievements
    const achievements = [
      {
        name: "first_quiz",
        nameAr: "ุฃูู ุงุฎุชุจุงุฑ",
        description: "Complete your first quiz",
        descriptionAr: "ุฃููู ุงุฎุชุจุงุฑู ุงูุฃูู",
        icon: "trophy",
        condition: JSON.stringify({ type: "quiz_count", value: 1 }),
        points: 10,
      },
      {
        name: "quiz_veteran",
        nameAr: "ูุญุงุฑุจ ุงูุงุฎุชุจุงุฑุงุช",
        description: "Complete 10 quizzes",
        descriptionAr: "ุฃููู 10 ุงุฎุชุจุงุฑุงุช",
        icon: "medal",
        condition: JSON.stringify({ type: "quiz_count", value: 10 }),
        points: 50,
      },
      {
        name: "hundred_correct",
        nameAr: "ูุฆุฉ ุฅุฌุงุจุฉ ุตุญูุญุฉ",
        description: "Answer 100 questions correctly",
        descriptionAr: "ุฃุฌุจ ุนูู 100 ุณุคุงู ุจุดูู ุตุญูุญ",
        icon: "target",
        condition: JSON.stringify({ type: "correct_answers", value: 100 }),
        points: 100,
      },
      {
        name: "five_hundred_correct",
        nameAr: "ุฎูุณูุฆุฉ ุฅุฌุงุจุฉ ุตุญูุญุฉ",
        description: "Answer 500 questions correctly",
        descriptionAr: "ุฃุฌุจ ุนูู 500 ุณุคุงู ุจุดูู ุตุญูุญ",
        icon: "star",
        condition: JSON.stringify({ type: "correct_answers", value: 500 }),
        points: 250,
      },
      {
        name: "perfect_score",
        nameAr: "ุงููุชูุฌุฉ ุงููุงููุฉ",
        description: "Get 100% score on a quiz",
        descriptionAr: "ุงุญุตู ุนูู ูุชูุฌุฉ 100% ูู ุงุฎุชุจุงุฑ",
        icon: "crown",
        condition: JSON.stringify({ type: "perfect_score", value: 1 }),
        points: 200,
      },
    ]

    // Create achievements first
    for (const achievement of achievements) {
      await prisma.achievement.create({
        data: achievement,
      })
    }

    // Create questions with answers
    let createdCount = 0
    for (const questionData of sampleQuestions) {
      await prisma.question.create({
        data: {
          text: questionData.text,
          explanation: questionData.explanation,
          category: questionData.category,
          difficulty: questionData.difficulty,
          examTag: questionData.examTag,
          answers: {
            create: questionData.answers,
          },
        },
      })
      createdCount++
    }

    // Add more sample questions to reach 60+ for testing
    const additionalQuestions = Array.from({ length: 50 }, (_, i) => ({
      text: `ุณุคุงู ูุงูููู ุฑูู ${i + 11}: ูุง ูู ุงูุญูู ุงููุงูููู ูู ูุฐู ุงูุญุงูุฉุ`,
      explanation: `ูุฐุง ุชุนููู ูููุฐุฌู ููุณุคุงู ุฑูู ${i + 11}. ูุฌุจ ูุฑุงุฌุนุฉ ุงููุตูุต ุงููุงููููุฉ ุฐุงุช ุงูุตูุฉ ูููู ุงูุญูู ุจุดูู ูุงูู.`,
      category: Object.values(Category)[i % Object.values(Category).length],
      difficulty: Object.values(Difficulty)[i % Object.values(Difficulty).length],
      examTag: "Exam2025",
      answers: [
        { text: `ุงูุฎูุงุฑ ุงูุฃูู ููุณุคุงู ${i + 11}`, isCorrect: i % 4 === 0 },
        { text: `ุงูุฎูุงุฑ ุงูุซุงูู ููุณุคุงู ${i + 11}`, isCorrect: i % 4 === 1 },
        { text: `ุงูุฎูุงุฑ ุงูุซุงูุซ ููุณุคุงู ${i + 11}`, isCorrect: i % 4 === 2 },
        { text: `ุงูุฎูุงุฑ ุงูุฑุงุจุน ููุณุคุงู ${i + 11}`, isCorrect: i % 4 === 3 },
      ],
    }))

    for (const questionData of additionalQuestions) {
      await prisma.question.create({
        data: {
          text: questionData.text,
          explanation: questionData.explanation,
          category: questionData.category,
          difficulty: questionData.difficulty,
          examTag: questionData.examTag,
          answers: {
            create: questionData.answers,
          },
        },
      })
      createdCount++
    }

    return NextResponse.json({
      message: "Database seeded successfully!",
      questionsCreated: createdCount,
      achievementsCreated: achievements.length,
    })
  } catch (error) {
    console.error("Error seeding database:", error)
    return NextResponse.json({ error: "Failed to seed database" }, { status: 500 })
  }
}
